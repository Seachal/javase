<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Copy element &apos;GenericBean.java&apos; to &apos;JavaSe_API/src/generic&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/generic&apos;&#x0D;&#x0A;- Original element: &apos;generic.GenericBean.java&apos;" description="Copy compilation unit" destination="/src&lt;generic" element1="/src&lt;generic{GenericBean.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1476599418999" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericBean&apos; from expression &apos;new GenericBean()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericBean&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericBean()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericBean&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericBean" replace="true" selection="136 0" stamp="1476599452544" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;generic.Data.java&apos;" description="Delete element" element1="/src&lt;generic{Data.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1476600342746" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericTest&apos; from expression &apos;new GenericTest()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericTest&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericTest()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericTest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericTest" replace="true" selection="200 0" stamp="1476600998086" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;data2&apos; from expression &apos;stringBean.getData()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;data2&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;stringBean.getData()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;data2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="data2" replace="true" selection="344 0" stamp="1476601298655" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericBean&apos; from expression &apos;new GenericBean&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericBean&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericBean&lt;&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericBean&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericBean" replace="true" selection="142 0" stamp="1476602372876" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;GenericBean.java&apos; to &apos;JavaSe_API/src/generic&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/generic&apos;&#x0D;&#x0A;- Original element: &apos;generic.GenericBean.java&apos;" description="Copy compilation unit" destination="/src&lt;generic" element1="/src&lt;generic{GenericBean.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1476603142463" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericBean2&apos; from expression &apos;new GenericBean2&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericBean2&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericBean.genericMethod2()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericBean2&lt;&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericBean2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericBean.java" name="genericBean2" replace="true" selection="472 0" stamp="1476603169920" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericImpl&apos; from expression &apos;new GenericImpl&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericImpl&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericImpl&lt;&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericImpl&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericImpl" replace="true" selection="168 0" stamp="1476603715433" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericImpl&apos; from expression &apos;new GenericImpl&lt;&gt;(e)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericImpl&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new GenericImpl&lt;&gt;(e)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericImpl&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericImpl" replace="true" selection="169 0" stamp="1476603933228" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;integer&apos; from expression &apos;genericImpl.get()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;integer&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericImpl.get()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;integer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="integer" replace="true" selection="248 0" stamp="1476604160317" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;add&apos; from expression &apos;genericImpl.add(3)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;add&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericImpl.add(3)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;add&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="add" replace="true" selection="289 0" stamp="1476604191633" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     generic.GenericBean2.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;generic{GenericBean2.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1476604735488" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;genericImpl.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericImpl.getClass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="clazz" replace="true" selection="230 0" stamp="1476605793852" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericInterfaces&apos; from expression &apos;clazz.getGenericInterfaces()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericInterfaces&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getGenericInterfaces()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericInterfaces&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericInterfaces" replace="true" selection="300 0" stamp="1476605808517" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericSuperclass&apos; from expression &apos;clazz.getGenericSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericSuperclass&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getGenericSuperclass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericSuperclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericSuperclass" replace="true" selection="395 0" stamp="1476605826427" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;Arrays.toString(genericInterfaces)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;string&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.toString(genericInterfaces)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="string" replace="true" selection="424 0" stamp="1476605846283" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;superclass&apos; from expression &apos;clazz.getSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;superclass&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getSuperclass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;superclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="superclass" replace="true" selection="727 0" stamp="1476606016488" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;clazz.getMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methods&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getMethods()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="methods" replace="true" selection="717 0" stamp="1476611231301" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericParameterTypes&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="genericParameterTypes" replace="true" selection="846 0" stamp="1476611247477" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="parameterTypes" replace="true" selection="853 0" stamp="1476611491796" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;type.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;type.getActualTypeArguments()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest.java" name="actualTypeArguments" replace="true" selection="949 0" stamp="1476613070392" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;GenericTest2.class.getDeclaredMethod(&quot;getData&quot;,List.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;GenericTest2.class.getDeclaredMethod(&quot;getData&quot;,List.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="method" replace="true" selection="208 0" stamp="1476616466940" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="parameterTypes" replace="true" selection="289 0" stamp="1476616500459" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericParameterTypes&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="genericParameterTypes" replace="true" selection="357 0" stamp="1476616799704" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;type.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;type.getActualTypeArguments()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="actualTypeArguments" replace="true" selection="595 0" stamp="1476617352618" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;lowerBounds&apos; from expression &apos;wildcardType.getLowerBounds()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;lowerBounds&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;wildcardType.getLowerBounds()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;lowerBounds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="lowerBounds" replace="true" selection="813 0" stamp="1476617659201" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;upperBounds&apos; from expression &apos;wildcardType.getUpperBounds()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;upperBounds&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;wildcardType.getUpperBounds()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;upperBounds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="upperBounds" replace="true" selection="868 0" stamp="1476617667453" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeName&apos; from expression &apos;wildcardType.getTypeName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeName&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;wildcardType.getTypeName()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;typeName&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="typeName" replace="true" selection="1026 0" stamp="1476618740934" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="arrayList" replace="true" selection="1344 0" stamp="1476619912562" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericSuperclass&apos; from expression &apos;arrayList.getClass().getGenericSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericSuperclass&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.getClass().getGenericSuperclass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericSuperclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="genericSuperclass" replace="true" selection="1445 0" stamp="1476619996862" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;componentType&apos; from expression &apos;arrayList.getClass().getComponentType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;componentType&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.getClass().getComponentType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;componentType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="componentType" replace="true" selection="1442 0" stamp="1476620084527" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericSuperclass&apos; from expression &apos;arrayList.getClass().getGenericSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericSuperclass&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.getClass().getGenericSuperclass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericSuperclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="genericSuperclass" replace="true" selection="1426 0" stamp="1476675015785" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;arrayList.getClass().getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;generic.GenericTest2.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.getClass().getTypeParameters()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;generic{GenericTest2.java" name="typeParameters" replace="true" selection="1536 0" stamp="1476675082535" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotationPresent&apos; from expression &apos;TestAnnotationClass.class.isAnnotationPresent(Anno.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotationPresent&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;TestAnnotationClass.class.isAnnotationPresent(Anno.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotationPresent&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotationPresent" replace="true" selection="203 0" stamp="1477015875893" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;TestAnnotationClass.class.getAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;TestAnnotationClass.class.getAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotation" replace="true" selection="335 0" stamp="1477015943644" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotations&apos; from expression &apos;Father.class.getAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotations&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Father.class.getAnnotations()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotations" replace="true" selection="542 0" stamp="1477016104910" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotationPresent&apos; from expression &apos;Father.class.isAnnotationPresent(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotationPresent&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Father.class.isAnnotationPresent(MyAnnotation.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotationPresent&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotationPresent" replace="true" selection="441 0" stamp="1477016189919" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;Father.class.getAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Father.class.getAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotation" replace="true" selection="606 0" stamp="1477016253419" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotations2&apos; from expression &apos;Child.class.getAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotations2&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getAnnotations()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotations2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotations2" replace="true" selection="708 0" stamp="1477016290565" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;Child.class.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="declaredAnnotations" replace="true" selection="819 0" stamp="1477016403809" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotation&apos; from expression &apos;Child.class.getDeclaredAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotation&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getDeclaredAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredAnnotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="declaredAnnotation" replace="true" selection="1013 0" stamp="1477016501477" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;Child.class.getAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="annotation" replace="true" selection="760 0" stamp="1477016585200" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethod&apos; from expression &apos;Child.class.getDeclaredMethod(&quot;method&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethod&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getDeclaredMethod(&quot;method&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="declaredMethod" replace="true" selection="1029 0" stamp="1477016697107" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotation2&apos; from expression &apos;declaredMethod.getDeclaredAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotation2&apos;&#x0D;&#x0A;- Destination method: &apos;annotation.TestAnnotationClass.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;declaredMethod.getDeclaredAnnotation(Anno.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredAnnotation2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;annotation{TestAnnotationClass.java" name="declaredAnnotation2" replace="true" selection="1151 0" stamp="1477016722977" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;builder.Builder&apos; to &apos;MyObj&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;builder.Builder&apos;&#x0D;&#x0A;- Renamed element: &apos;builder.MyObj&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Builder&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;builder{Builder.java[Builder" matchStrategy="1" name="MyObj" qualified="false" references="true" similarDeclarations="false" stamp="1477017066538" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObj&apos; from expression &apos;new MyObj()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObj&apos;&#x0D;&#x0A;- Destination method: &apos;builder.BuilderTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObj()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;myObj&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;builder{BuilderTest.java" name="myObj" replace="true" selection="135 0" stamp="1477017123069" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;username&apos; from expression &apos;myObj.getUsername()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;username&apos;&#x0D;&#x0A;- Destination method: &apos;builder.BuilderTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;myObj.getUsername()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;username&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;builder{BuilderTest.java" name="username" replace="true" selection="173 0" stamp="1477017155169" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;age&apos; from expression &apos;myObj.getAge()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;age&apos;&#x0D;&#x0A;- Destination method: &apos;builder.BuilderTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;myObj.getAge()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;age&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;builder{BuilderTest.java" name="age" replace="true" selection="210 0" stamp="1477017160820" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObj&apos; from expression &apos;new MyObj.Builder().setUsername(&quot;张三&quot;).setAge(30).setLike(&quot;足球&quot;).setColor(&quot;蓝色&quot;).build()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObj&apos;&#x0D;&#x0A;- Destination method: &apos;builder.BuilderTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObj.Builder().setUsername(&quot;张三&quot;).setAge(30).setLike(&quot;足球&quot;).setColor(&quot;蓝色&quot;).build()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;myObj&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;builder{BuilderTest.java" name="myObj" replace="true" selection="272 0" stamp="1477017753497" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObserverable&apos; from expression &apos;new MyObserverable()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObserverable&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObserverable()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;myObserverable&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="myObserverable" replace="true" selection="213 0" stamp="1477019331428" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObserver&apos; from expression &apos;new MyObserver()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObserver&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObserver()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;myObserver&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="myObserver" replace="true" selection="305 0" stamp="1477019349319" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;observer.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;observer.getClass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="clazz" replace="true" selection="361 0" stamp="1477019653535" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethods&apos; from expression &apos;clazz.getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethods&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getDeclaredMethods()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="declaredMethods" replace="true" selection="429 0" stamp="1477019672553" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;isPublic&apos; from expression &apos;Modifier.isPublic(method.getModifiers())&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;isPublic&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;Modifier.isPublic(method.getModifiers())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;isPublic&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="isPublic" replace="true" selection="656 0" stamp="1477019752481" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotationPresent&apos; from expression &apos;method.isAnnotationPresent(Subscribe.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotationPresent&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isAnnotationPresent(Subscribe.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotationPresent&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="annotationPresent" replace="true" selection="665 0" stamp="1477019792430" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="parameterTypes" replace="true" selection="844 0" stamp="1477019841948" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;method.getAnnotation(Subscribe.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getAnnotation(Subscribe.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="annotation" replace="true" selection="958 0" stamp="1477019896235" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;eventType&apos; from expression &apos;parameterTypes[0]&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;eventType&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterTypes[0]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;eventType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="eventType" replace="true" selection="1352 0" stamp="1477020211519" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methodSet&apos; from expression &apos;eventMap.get(eventType)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methodSet&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;eventMap.get(eventType)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methodSet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="methodSet" replace="true" selection="1405 0" stamp="1477020264276" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;hashSet&apos; from expression &apos;new HashSet&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;hashSet&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;new HashSet&lt;&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;hashSet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="hashSet" replace="true" selection="1509 0" stamp="1477020283220" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;subscribeMethod&apos; from expression &apos;new SubscribeMethod()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;subscribeMethod&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;new SubscribeMethod()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;subscribeMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="subscribeMethod" replace="true" selection="1656 0" stamp="1477020683917" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;class1&apos; from expression &apos;event.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;class1&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.pushEvent()&apos;&#x0D;&#x0A;- Variable expression: &apos;event.getClass()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;class1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="class1" replace="true" selection="2341 0" stamp="1477020752122" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;subscribeMethods&apos; from expression &apos;subscrbMethods.get(event)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;subscribeMethods&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.pushEvent()&apos;&#x0D;&#x0A;- Variable expression: &apos;subscrbMethods.get(event)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;subscribeMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="subscribeMethods" replace="true" selection="2606 0" stamp="1477021103427" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;eventTypeSet&apos; from expression &apos;eventMap.keySet()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;eventTypeSet&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;eventMap.keySet()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;eventTypeSet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="eventTypeSet" replace="true" selection="2209 0" stamp="1477021261577" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;set&apos; from expression &apos;subscrbMethods.get(eventType)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;set&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.MyObserverable.regist()&apos;&#x0D;&#x0A;- Variable expression: &apos;subscrbMethods.get(eventType)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;set&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{MyObserverable.java" name="set" replace="true" selection="2312 0" stamp="1477021295991" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObserver&apos; from expression &apos;new MyObserver()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObserver&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBusTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObserver()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;myObserver&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBusTest.java" name="myObserver" replace="true" selection="215 0" stamp="1477022134703" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;subscribeMap&apos; from expression &apos;classTypes.remove(observer.getClass())&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;subscribeMap&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.unregist()&apos;&#x0D;&#x0A;- Variable expression: &apos;classTypes.remove(observer.getClass())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;subscribeMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="subscribeMap" replace="true" selection="2976 0" stamp="1477022224423" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classes&apos; from expression &apos;subscribeMap.keySet()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classes&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.unregist()&apos;&#x0D;&#x0A;- Variable expression: &apos;subscribeMap.keySet()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;classes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="classes" replace="true" selection="3051 0" stamp="1477022291304" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;entrySet&apos; from expression &apos;subscrbMethods.entrySet()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;entrySet&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.unregist()&apos;&#x0D;&#x0A;- Variable expression: &apos;subscrbMethods.entrySet()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;entrySet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="entrySet" replace="true" selection="3039 0" stamp="1477022355955" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methodSets&apos; from expression &apos;entry.getValue()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methodSets&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.EventBus.unregist()&apos;&#x0D;&#x0A;- Variable expression: &apos;entry.getValue()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methodSets&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus{EventBus.java" name="methodSets" replace="true" selection="3208 0" stamp="1477022399425" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;eventbus.observer.MyObserverable.java&apos;" description="Delete element" element1="/src&lt;eventbus.observer{MyObserverable.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477022558225" subPackages="false" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;url&apos; from expression &apos;new URL(path)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;url&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new URL(path)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;url&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="url" replace="true" selection="200 0" stamp="1477035257664" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;inputStream&apos; from expression &apos;connection.getInputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;inputStream&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;connection.getInputStream()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;inputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="inputStream" replace="true" selection="374 0" stamp="1477035293501" version="1.0"/>
</session>