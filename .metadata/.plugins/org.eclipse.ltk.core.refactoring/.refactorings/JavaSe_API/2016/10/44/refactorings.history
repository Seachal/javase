<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;Test.class.getDeclaredMethod(&quot;test&quot;,List.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Test.class.getDeclaredMethod(&quot;test&quot;,List.class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="method" replace="true" selection="270 0" stamp="1477315468949" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericParameterTypes&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="genericParameterTypes" replace="true" selection="358 0" stamp="1477315492184" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameterTypes" replace="true" selection="558 0" stamp="1477315604082" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameters&apos; from expression &apos;method.getParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameters&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameters()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameters" replace="true" selection="613 0" stamp="1477315612285" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterCount&apos; from expression &apos;method.getParameterCount()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterCount&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterCount()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterCount&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameterCount" replace="true" selection="706 0" stamp="1477315621535" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterAnnotations&apos; from expression &apos;method.getParameterAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterAnnotations()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameterAnnotations" replace="true" selection="986 0" stamp="1477315787424" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotations&apos; from expression &apos;parameterAnnotations[i]&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotations&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterAnnotations[i]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="annotations" replace="true" selection="1145 0" stamp="1477315857550" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotatedParameterTypes&apos; from expression &apos;method.getAnnotatedParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotatedParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getAnnotatedParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;annotatedParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="annotatedParameterTypes" replace="true" selection="1047 0" stamp="1477316442399" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterAnnotations&apos; from expression &apos;method.getParameterAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterAnnotations()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameterAnnotations" replace="true" selection="1371 0" stamp="1477316622167" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rawType&apos; from expression &apos;parameterizedType.getRawType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;rawType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getRawType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;rawType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="rawType" replace="true" selection="1269 0" stamp="1477317634518" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="actualTypeArguments" replace="true" selection="1348 0" stamp="1477317745098" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethods&apos; from expression &apos;Test.class.getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethods&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Test.class.getDeclaredMethods()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="declaredMethods" replace="true" selection="2637 0" stamp="1477319031031" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes2&apos; from expression &apos;item.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes2&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;item.getParameterTypes()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterTypes2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="parameterTypes2" replace="true" selection="2770 0" stamp="1477319183236" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="actualTypeArguments" replace="true" selection="3023 0" stamp="1477323571804" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="actualTypeArguments" replace="true" selection="4616 0" stamp="1477359302767" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;field&apos; from expression &apos;Test.class.getDeclaredField(&quot;a&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;field&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Test.class.getDeclaredField(&quot;a&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;field&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="field" replace="true" selection="5071 0" stamp="1477361351800" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fieldType&apos; from expression &apos;field.getType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;fieldType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;field.getType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fieldType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="fieldType" replace="true" selection="5138 0" stamp="1477361363892" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericType&apos; from expression &apos;field.getGenericType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;field.getGenericType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="genericType" replace="true" selection="5186 0" stamp="1477361395074" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeName&apos; from expression &apos;field.getDeclaringClass().getTypeName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeName&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;field.getDeclaringClass().getTypeName()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;typeName&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="typeName" replace="true" selection="5693 0" stamp="1477362684526" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;componentType&apos; from expression &apos;strArray.getClass().getComponentType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;componentType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;strArray.getClass().getComponentType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;componentType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="componentType" replace="true" selection="5825 0" stamp="1477362825812" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;method.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getTypeParameters()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="typeParameters" replace="true" selection="2618 0" stamp="1477362961524" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethod&apos; from expression &apos;Test.class.getDeclaredMethod(&quot;returnType&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethod&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Test.class.getDeclaredMethod(&quot;returnType&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;declaredMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="declaredMethod" replace="true" selection="6193 0" stamp="1477363361973" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;returnType&apos; from expression &apos;declaredMethod.getReturnType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;returnType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;declaredMethod.getReturnType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;returnType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="returnType" replace="true" selection="6252 0" stamp="1477363368801" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericReturnType&apos; from expression &apos;declaredMethod.getGenericReturnType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericReturnType&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;declaredMethod.getGenericReturnType()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genericReturnType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="genericReturnType" replace="true" selection="6316 0" stamp="1477363376317" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;gpt&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;gpt&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;" description="Extract local variable &apos;gpt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="gpt" replace="false" selection="6599 0" stamp="1477363790049" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters2&apos; from expression &apos;declaredMethod.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters2&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;declaredMethod.getTypeParameters()&apos;" description="Extract local variable &apos;typeParameters2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="typeParameters2" replace="false" selection="6600 0" stamp="1477363929350" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enclosingClass&apos; from expression &apos;Test.class.getEnclosingClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enclosingClass&apos;&#x0D;&#x0A;- Destination method: &apos;Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Test.class.getEnclosingClass()&apos;" description="Extract local variable &apos;enclosingClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Test.java" name="enclosingClass" replace="false" selection="6749 0" stamp="1477364110954" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete 2 elements from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     BaseTest.java&#x0D;&#x0A;     ChildTest.java" description="Delete elements" element1="/src&lt;{ChildTest.java" element2="/src&lt;{BaseTest.java" elements="2" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477364954946" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethods&apos; from expression &apos;Outer.class.getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethods&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredMethods()&apos;" description="Extract local variable &apos;declaredMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredMethods" replace="false" selection="252 0" stamp="1477365397869" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaringClass&apos; from expression &apos;innerClass.getDeclaringClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaringClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;innerClass.getDeclaringClass()&apos;" description="Extract local variable &apos;declaringClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaringClass" replace="false" selection="406 0" stamp="1477365577484" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enclosingClass&apos; from expression &apos;cls.getEnclosingClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enclosingClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getEnclosing()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getEnclosingClass()&apos;" description="Extract local variable &apos;enclosingClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="enclosingClass" replace="false" selection="550 0" stamp="1477365629429" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enclosingConstructor&apos; from expression &apos;cls.getEnclosingConstructor()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enclosingConstructor&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getEnclosing()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getEnclosingConstructor()&apos;" description="Extract local variable &apos;enclosingConstructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="enclosingConstructor" replace="false" selection="607 0" stamp="1477365636371" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enclosingMethod&apos; from expression &apos;cls.getEnclosingMethod()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enclosingMethod&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getEnclosing()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getEnclosingMethod()&apos;" description="Extract local variable &apos;enclosingMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="enclosingMethod" replace="false" selection="710 0" stamp="1477365643903" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredClasses&apos; from expression &apos;Outer.class.getDeclaredClasses()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredClasses&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredClasses()&apos;" description="Extract local variable &apos;declaredClasses&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredClasses" replace="false" selection="1447 0" stamp="1477370602067" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaringClass&apos; from expression &apos;InnerClass.class.getDeclaringClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaringClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;InnerClass.class.getDeclaringClass()&apos;" description="Extract local variable &apos;declaringClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaringClass" replace="false" selection="1451 0" stamp="1477370679864" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;Outer.class.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredAnnotations" replace="false" selection="1874 0" stamp="1477370753595" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;outer&apos; from expression &apos;new Outer()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;outer&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Outer()&apos;" description="Extract local variable &apos;outer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="outer" replace="false" selection="3345 0" stamp="1477373898322" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;Outer.class.getAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="annotation" replace="false" selection="3379 0" stamp="1477373947036" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;Outer.class.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredAnnotations" replace="false" selection="3370 0" stamp="1477374160900" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotation&apos; from expression &apos;Outer.class.getDeclaredAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;declaredAnnotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredAnnotation" replace="false" selection="3618 0" stamp="1477374335886" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotationsByType&apos; from expression &apos;Outer.class.getDeclaredAnnotationsByType(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotationsByType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredAnnotationsByType(MyAnnotation.class)&apos;" description="Extract local variable &apos;declaredAnnotationsByType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredAnnotationsByType" replace="false" selection="3783 0" stamp="1477374460798" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredConstructors&apos; from expression &apos;Outer.class.getDeclaredConstructors()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredConstructors&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredConstructors()&apos;" description="Extract local variable &apos;declaredConstructors&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredConstructors" replace="false" selection="3592 0" stamp="1477374604574" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredFields&apos; from expression &apos;Outer.class.getDeclaredFields()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredFields&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredFields()&apos;" description="Extract local variable &apos;declaredFields&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredFields" replace="false" selection="3857 0" stamp="1477374742365" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethods&apos; from expression &apos;Outer.class.getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethods&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.Outer.getDecalaredTest()&apos;&#x0D;&#x0A;- Variable expression: &apos;Outer.class.getDeclaredMethods()&apos;" description="Extract local variable &apos;declaredMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{Outer.java" name="declaredMethods" replace="false" selection="3956 0" stamp="1477374755907" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;JavaSe_API/src/com.cn.text&apos;" description="Delete element" element1="/src&lt;com.cn.text" element2="/src&lt;com.cn" element3="/src&lt;com" elements="3" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477375856805" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;asSubclass&apos; from expression &apos;ArrayList.class.asSubclass(List.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;asSubclass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ArrayList.class.asSubclass(List.class)&apos;" description="Extract local variable &apos;asSubclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="asSubclass" replace="false" selection="249 0" stamp="1477376082266" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;father&apos; from expression &apos;new isAssignableFrom.Father()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;father&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new isAssignableFrom.Father()&apos;" description="Extract local variable &apos;father&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="father" replace="false" selection="448 0" stamp="1477376205326" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;cast&apos; from expression &apos;Child.class.cast(father)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;cast&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.cast(father)&apos;" description="Extract local variable &apos;cast&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="cast" replace="false" selection="515 0" stamp="1477376212908" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;String&gt;()&apos;" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="arrayList" replace="false" selection="407 0" stamp="1477376853505" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;instance&apos; from expression &apos;List.class.isInstance(arrayList)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;instance&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;List.class.isInstance(arrayList)&apos;" description="Extract local variable &apos;instance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="instance" replace="false" selection="551 0" stamp="1477376971819" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;cast&apos; from expression &apos;List.class.cast(arrayList)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;cast&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;List.class.cast(arrayList)&apos;" description="Extract local variable &apos;cast&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="cast" replace="false" selection="831 0" stamp="1477377190334" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;ClassTest.class.getMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methods&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getMethods()&apos;" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="methods" replace="false" selection="1295 0" stamp="1477377896853" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myAnnotation&apos; from expression &apos;ClassTest.class.getDeclaredAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myAnnotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getDeclaredAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;myAnnotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="myAnnotation" replace="false" selection="1931 0" stamp="1477378684125" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;ClassTest.class.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="declaredAnnotations" replace="false" selection="1868 0" stamp="1477378689487" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotations&apos; from expression &apos;ClassTest.class.getAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getAnnotations()&apos;" description="Extract local variable &apos;annotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="annotations" replace="false" selection="2073 0" stamp="1477378714716" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;ClassTest.class.getAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="annotation" replace="false" selection="2155 0" stamp="1477378740441" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredClasses&apos; from expression &apos;ClassTest.class.getDeclaredClasses()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredClasses&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getDeclaredClasses()&apos;" description="Extract local variable &apos;declaredClasses&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="declaredClasses" replace="false" selection="1887 0" stamp="1477378870354" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classes&apos; from expression &apos;ClassTest.class.getClasses()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getClasses()&apos;" description="Extract local variable &apos;classes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="classes" replace="false" selection="2273 0" stamp="1477378907260" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classes&apos; from expression &apos;Child.class.getClasses()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getClasses()&apos;" description="Extract local variable &apos;classes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="classes" replace="false" selection="2332 0" stamp="1477378990509" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;class1&apos; from expression &apos;Child.class.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;class1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getClass()&apos;" description="Extract local variable &apos;class1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="class1" replace="false" selection="2285 0" stamp="1477379239446" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classes&apos; from expression &apos;Child.class.getClasses()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getClasses()&apos;" description="Extract local variable &apos;classes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="classes" replace="false" selection="2287 0" stamp="1477379268060" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classLoader&apos; from expression &apos;ClassTest.class.getClassLoader()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classLoader&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getClassLoader()&apos;" description="Extract local variable &apos;classLoader&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="classLoader" replace="false" selection="1955 0" stamp="1477379547051" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;componentType&apos; from expression &apos;arrayList.getClass().getComponentType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;componentType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.getClass().getComponentType()&apos;" description="Extract local variable &apos;componentType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="componentType" replace="false" selection="2102 0" stamp="1477379626093" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enclosingClass&apos; from expression &apos;Child.class.getEnclosingClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enclosingClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getEnclosingClass()&apos;" description="Extract local variable &apos;enclosingClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="enclosingClass" replace="false" selection="2448 0" stamp="1477379827533" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enumConstants&apos; from expression &apos;MyEnum.class.getEnumConstants()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enumConstants&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;MyEnum.class.getEnumConstants()&apos;" description="Extract local variable &apos;enumConstants&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="enumConstants" replace="false" selection="2539 0" stamp="1477379971466" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;interfaces&apos; from expression &apos;Child.class.getInterfaces()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;interfaces&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getInterfaces()&apos;" description="Extract local variable &apos;interfaces&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="interfaces" replace="false" selection="2671 0" stamp="1477380396980" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;MyInterface.java&apos; to &apos;JavaSe_API/src/reflect&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/reflect&apos;&#x0D;&#x0A;- Original element: &apos;reflect.MyInterface.java&apos;" description="Copy compilation unit" destination="/src&lt;reflect" element1="/src&lt;reflect{MyInterface.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1477380411704" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericInterfaces&apos; from expression &apos;Child.class.getGenericInterfaces()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericInterfaces&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getGenericInterfaces()&apos;" description="Extract local variable &apos;genericInterfaces&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="genericInterfaces" replace="false" selection="2876 0" stamp="1477380551829" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;superclass&apos; from expression &apos;Child.class.getSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;superclass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getSuperclass()&apos;" description="Extract local variable &apos;superclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="superclass" replace="false" selection="3172 0" stamp="1477380751227" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericSuperclass&apos; from expression &apos;Child.class.getGenericSuperclass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericSuperclass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getGenericSuperclass()&apos;" description="Extract local variable &apos;genericSuperclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="genericSuperclass" replace="false" selection="3348 0" stamp="1477380841424" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;modifiers&apos; from expression &apos;ClassTest.class.getModifiers()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;modifiers&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getModifiers()&apos;" description="Extract local variable &apos;modifiers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="modifiers" replace="false" selection="3456 0" stamp="1477380893037" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;Modifier.toString(modifiers)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;string&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Modifier.toString(modifiers)&apos;" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="string" replace="false" selection="3541 0" stamp="1477380910383" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;package1&apos; from expression &apos;ClassTest.class.getPackage()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;package1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getPackage()&apos;" description="Extract local variable &apos;package1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="package1" replace="false" selection="3671 0" stamp="1477380980574" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;resourceAsStream&apos; from expression &apos;ClassTest.class.getResourceAsStream(&quot;resource.txt&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;resourceAsStream&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.getResourceAsStream(&quot;resource.txt&quot;)&apos;" description="Extract local variable &apos;resourceAsStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="resourceAsStream" replace="false" selection="3869 0" stamp="1477381293138" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;resource.txt&apos; to &apos;JavaSe_API/src/reflect.test&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/reflect.test&apos;&#x0D;&#x0A;- Original element: &apos;resource.txt&apos;" description="Copy file" destination="/src&lt;reflect.test" element1="src/reflect/resource.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1477381396904" units="0" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;resource.txt&apos; to &apos;JavaSe_API/src&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src&apos;&#x0D;&#x0A;- Original element: &apos;resource.txt&apos;" description="Copy file" destination="/src" element1="src/reflect/resource.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1477381399989" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename resource &apos;JavaSe_API/src/resource.txt&apos; to &apos;res.txt&apos;" description="Rename resource &apos;resource.txt&apos;" flags="7" id="org.eclipse.ltk.core.refactoring.rename.resource" input="src/resource.txt" name="res.txt" stamp="1477381458164" updateReferences="true"/>&#x0A;<refactoring comment="Move element &apos;res.txt&apos; to &apos;JavaSe_API/src/singleton&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/singleton&apos;&#x0D;&#x0A;- Original element: &apos;res.txt&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move file" destination="/src&lt;singleton" element1="src/res.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1477381472080" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;reflect.test&apos; to &apos;reflect.config&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;JavaSe_API/src/reflect.test&apos;&#x0D;&#x0A;- Renamed element: &apos;JavaSe_API/src/reflect.config&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;reflect.test&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;reflect.test" name="reflect.config" qualified="false" references="true" stamp="1477381530186" textual="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;resource.txt&apos;" description="Delete element" element1="src/reflect/resource.txt" elements="0" flags="589830" id="org.eclipse.jdt.ui.delete" resources="1" stamp="1477381545610" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;res.txt&apos;" description="Delete element" element1="src/singleton/res.txt" elements="0" flags="589830" id="org.eclipse.jdt.ui.delete" resources="1" stamp="1477381550000" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;Child.class.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Child.class.getTypeParameters()&apos;" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="typeParameters" replace="false" selection="4102 0" stamp="1477381787179" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation&apos; from expression &apos;MyAnnotation.class.isAnnotation()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;MyAnnotation.class.isAnnotation()&apos;" description="Extract local variable &apos;annotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="annotation" replace="false" selection="4368 0" stamp="1477381972271" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotation2&apos; from expression &apos;ClassTest.class.isAnnotation()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotation2&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.isAnnotation()&apos;" description="Extract local variable &apos;annotation2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="annotation2" replace="false" selection="4424 0" stamp="1477381980577" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;anonymousClass&apos; from expression &apos;this.getClass().isAnonymousClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;anonymousClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main().new ArrayList() {...}.add()&apos;&#x0D;&#x0A;- Variable expression: &apos;this.getClass().isAnonymousClass()&apos;" description="Extract local variable &apos;anonymousClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="anonymousClass" replace="false" selection="4569 0" stamp="1477382133064" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array2&apos; from expression &apos;new String[].getClass().isArray()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;array2&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new String[].getClass().isArray()&apos;" description="Extract local variable &apos;array2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="array2" replace="false" selection="4855 0" stamp="1477382543988" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;assignableFrom&apos; from expression &apos;Father.class.isAssignableFrom(Child.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;assignableFrom&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Father.class.isAssignableFrom(Child.class)&apos;" description="Extract local variable &apos;assignableFrom&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="assignableFrom" replace="false" selection="4918 0" stamp="1477382737357" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;enum1&apos; from expression &apos;MyEnum.class.isEnum()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;enum1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;MyEnum.class.isEnum()&apos;" description="Extract local variable &apos;enum1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="enum1" replace="false" selection="4976 0" stamp="1477382773442" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;interface1&apos; from expression &apos;MyInterface.class.isInterface()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;interface1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;MyInterface.class.isInterface()&apos;" description="Extract local variable &apos;interface1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="interface1" replace="false" selection="5040 0" stamp="1477382825108" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;localClass&apos; from expression &apos;Father.class.isLocalClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;localClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Father.class.isLocalClass()&apos;" description="Extract local variable &apos;localClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="localClass" replace="false" selection="5098 0" stamp="1477382977721" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;primitive&apos; from expression &apos;int.class.isPrimitive()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;primitive&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;int.class.isPrimitive()&apos;" description="Extract local variable &apos;primitive&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="primitive" replace="false" selection="5467 0" stamp="1477383238232" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;synthetic&apos; from expression &apos;ClassTest.class.isSynthetic()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;synthetic&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ClassTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ClassTest.class.isSynthetic()&apos;" description="Extract local variable &apos;synthetic&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ClassTest.java" name="synthetic" replace="false" selection="5591 0" stamp="1477383296833" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fieldTest&apos; from expression &apos;new FieldTest()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;fieldTest&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new FieldTest()&apos;" description="Extract local variable &apos;fieldTest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="fieldTest" replace="false" selection="274 0" stamp="1477385953007" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;fieldTest.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;fieldTest.getClass()&apos;" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="clazz" replace="false" selection="321 0" stamp="1477385964015" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;field.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;field.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="declaredAnnotations" replace="false" selection="500 0" stamp="1477386949570" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;object&apos; from expression &apos;field.get(obj)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;object&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;field.get(obj)&apos;" description="Extract local variable &apos;object&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="object" replace="false" selection="753 0" stamp="1477387264930" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;value&apos; from expression &apos;staticField.get(null)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;value&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;staticField.get(null)&apos;" description="Extract local variable &apos;value&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="value" replace="false" selection="884 0" stamp="1477387401466" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;int1&apos; from expression &apos;normalField.getInt(obj)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;int1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;normalField.getInt(obj)&apos;" description="Extract local variable &apos;int1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="int1" replace="false" selection="886 0" stamp="1477387630539" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericType&apos; from expression &apos;genericField.getGenericType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericField.getGenericType()&apos;" description="Extract local variable &apos;genericType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="genericType" replace="false" selection="1373 0" stamp="1477387900648" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;type&apos; from expression &apos;genericField.getType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;type&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericField.getType()&apos;" description="Extract local variable &apos;type&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="type" replace="false" selection="1451 0" stamp="1477387905813" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;type2&apos; from expression &apos;parameterizedType.getActualTypeArguments()[0]&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;type2&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.FieldTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()[0]&apos;" description="Extract local variable &apos;type2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{FieldTest.java" name="type2" replace="false" selection="1871 0" stamp="1477389415805" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methodTest&apos; from expression &apos;new MethodTest()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methodTest&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MethodTest()&apos;" description="Extract local variable &apos;methodTest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="methodTest" replace="false" selection="605 0" stamp="1477395237805" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clazz&apos; from expression &apos;methodTest.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;clazz&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;methodTest.getClass()&apos;" description="Extract local variable &apos;clazz&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="clazz" replace="false" selection="655 0" stamp="1477395247774" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;clazz.getDeclaredMethod(&quot;add&quot;,new Class[]{List.class})&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;clazz.getDeclaredMethod(&quot;add&quot;,new Class[]{List.class})&apos;" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="method" replace="false" selection="767 0" stamp="1477395323103" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotationPresent&apos; from expression &apos;method.isAnnotationPresent(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotationPresent&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isAnnotationPresent(MyAnnotation.class)&apos;" description="Extract local variable &apos;annotationPresent&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="annotationPresent" replace="false" selection="979 0" stamp="1477395518043" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myAnnotation&apos; from expression &apos;method.getDeclaredAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myAnnotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getDeclaredAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;myAnnotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="myAnnotation" replace="false" selection="1087 0" stamp="1477395536230" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;modifiers&apos; from expression &apos;method.getModifiers()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;modifiers&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getModifiers()&apos;" description="Extract local variable &apos;modifiers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="modifiers" replace="false" selection="1160 0" stamp="1477395700439" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;modify&apos; from expression &apos;Modifier.toString(modifiers)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;modify&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Modifier.toString(modifiers)&apos;" description="Extract local variable &apos;modify&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="modify" replace="false" selection="1245 0" stamp="1477395710267" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;method.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getTypeParameters()&apos;" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="typeParameters" replace="false" selection="1318 0" stamp="1477395747455" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;returnType&apos; from expression &apos;method.getReturnType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;returnType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getReturnType()&apos;" description="Extract local variable &apos;returnType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="returnType" replace="false" selection="1470 0" stamp="1477395792126" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericReturnType&apos; from expression &apos;method.getGenericReturnType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericReturnType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericReturnType()&apos;" description="Extract local variable &apos;genericReturnType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="genericReturnType" replace="false" selection="1526 0" stamp="1477395799219" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name&apos; from expression &apos;method.getName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;name&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getName()&apos;" description="Extract local variable &apos;name&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="name" replace="false" selection="1634 0" stamp="1477395832829" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterCount&apos; from expression &apos;method.getParameterCount()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterCount&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterCount()&apos;" description="Extract local variable &apos;parameterCount&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="parameterCount" replace="false" selection="1760 0" stamp="1477395885251" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="parameterTypes" replace="false" selection="1812 0" stamp="1477395894611" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericParameterTypes&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;" description="Extract local variable &apos;genericParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="genericParameterTypes" replace="false" selection="1946 0" stamp="1477398102686" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()&apos;" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="actualTypeArguments" replace="false" selection="2259 0" stamp="1477398236852" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;exceptionTypes&apos; from expression &apos;method.getExceptionTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;exceptionTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getExceptionTypes()&apos;" description="Extract local variable &apos;exceptionTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="exceptionTypes" replace="false" selection="3437 0" stamp="1477398828226" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericExceptionTypes&apos; from expression &apos;method.getGenericExceptionTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericExceptionTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericExceptionTypes()&apos;" description="Extract local variable &apos;genericExceptionTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="genericExceptionTypes" replace="false" selection="3503 0" stamp="1477398837148" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;&gt;()&apos;" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="arrayList" replace="false" selection="3727 0" stamp="1477398929663" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;bridge&apos; from expression &apos;method.isBridge()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;bridge&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isBridge()&apos;" description="Extract local variable &apos;bridge&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="bridge" replace="false" selection="1445 0" stamp="1477399158874" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;default1&apos; from expression &apos;method.isDefault()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;default1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isDefault()&apos;" description="Extract local variable &apos;default1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="default1" replace="false" selection="1485 0" stamp="1477399164749" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;synthetic&apos; from expression &apos;method.isSynthetic()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;synthetic&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isSynthetic()&apos;" description="Extract local variable &apos;synthetic&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="synthetic" replace="false" selection="1529 0" stamp="1477399170078" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;varArgs&apos; from expression &apos;method.isVarArgs()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;varArgs&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.isVarArgs()&apos;" description="Extract local variable &apos;varArgs&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="varArgs" replace="false" selection="1572 0" stamp="1477399178578" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaringClass&apos; from expression &apos;method.getDeclaringClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaringClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getDeclaringClass()&apos;" description="Extract local variable &apos;declaringClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="declaringClass" replace="false" selection="1444 0" stamp="1477399251423" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;defaultValue&apos; from expression &apos;method.getDefaultValue()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;defaultValue&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getDefaultValue()&apos;" description="Extract local variable &apos;defaultValue&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="defaultValue" replace="false" selection="1499 0" stamp="1477399257610" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterAnnotations&apos; from expression &apos;method.getParameterAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.getMethodInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterAnnotations()&apos;" description="Extract local variable &apos;parameterAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="parameterAnnotations" replace="false" selection="4220 0" stamp="1477399914247" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;method.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.MethodTest.getMethodInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{MethodTest.java" name="declaredAnnotations" replace="false" selection="2200 0" stamp="1477410044402" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;annotationPresent&apos; from expression &apos;constructor.isAnnotationPresent(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;annotationPresent&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.isAnnotationPresent(MyAnnotation.class)&apos;" description="Extract local variable &apos;annotationPresent&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="annotationPresent" replace="false" selection="424 0" stamp="1477410821292" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myAnnotation&apos; from expression &apos;constructor.getDeclaredAnnotation(MyAnnotation.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myAnnotation&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getDeclaredAnnotation(MyAnnotation.class)&apos;" description="Extract local variable &apos;myAnnotation&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="myAnnotation" replace="false" selection="537 0" stamp="1477410851844" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructor&apos; from expression &apos;ConstructorTest.class.getDeclaredConstructor(List.class,Object[].class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;constructor&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ConstructorTest.class.getDeclaredConstructor(List.class,Object[].class)&apos;" description="Extract local variable &apos;constructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="constructor" replace="false" selection="425 0" stamp="1477410919850" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;&gt;()&apos;" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="arrayList" replace="false" selection="672 0" stamp="1477411223991" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;instance&apos; from expression &apos;constructor.newInstance(arrayList,new String[]{&quot;2&quot;,&quot;2&quot;})&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;instance&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.newInstance(arrayList,new String[]{&quot;2&quot;,&quot;2&quot;})&apos;" description="Extract local variable &apos;instance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="instance" replace="false" selection="764 0" stamp="1477411261349" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredAnnotations&apos; from expression &apos;constructor.getDeclaredAnnotations()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredAnnotations&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getDeclaredAnnotations()&apos;" description="Extract local variable &apos;declaredAnnotations&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="declaredAnnotations" replace="false" selection="1371 0" stamp="1477411596743" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;modifiers&apos; from expression &apos;constructor.getModifiers()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;modifiers&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getModifiers()&apos;" description="Extract local variable &apos;modifiers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="modifiers" replace="false" selection="1493 0" stamp="1477411613353" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;modify&apos; from expression &apos;Modifier.toString(modifiers)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;modify&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;Modifier.toString(modifiers)&apos;" description="Extract local variable &apos;modify&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="modify" replace="false" selection="1578 0" stamp="1477411629100" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;constructor.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getTypeParameters()&apos;" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="typeParameters" replace="false" selection="1618 0" stamp="1477411720385" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name&apos; from expression &apos;constructor.getName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;name&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getName()&apos;" description="Extract local variable &apos;name&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="name" replace="false" selection="1819 0" stamp="1477411781918" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterCount&apos; from expression &apos;constructor.getParameterCount()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterCount&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getParameterCount()&apos;" description="Extract local variable &apos;parameterCount&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="parameterCount" replace="false" selection="1925 0" stamp="1477411836018" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;constructor.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getParameterTypes()&apos;" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="parameterTypes" replace="false" selection="1982 0" stamp="1477411843195" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameters&apos; from expression &apos;constructor.getParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameters&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.constructorInfo()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getParameters()&apos;" description="Extract local variable &apos;parameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="parameters" replace="false" selection="2118 0" stamp="1477412247104" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaringClass&apos; from expression &apos;constructor.getDeclaringClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaringClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.getDeclaringClass()&apos;" description="Extract local variable &apos;declaringClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="declaringClass" replace="false" selection="1429 0" stamp="1477412368941" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;synthetic&apos; from expression &apos;constructor.isSynthetic()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;synthetic&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.isSynthetic()&apos;" description="Extract local variable &apos;synthetic&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="synthetic" replace="false" selection="1517 0" stamp="1477412452066" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;varArgs&apos; from expression &apos;constructor.isVarArgs()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;varArgs&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ConstructorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.isVarArgs()&apos;" description="Extract local variable &apos;varArgs&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ConstructorTest.java" name="varArgs" replace="false" selection="1565 0" stamp="1477412457784" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;strArray&apos; from expression &apos;Array.newInstance(String.class,5)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;strArray&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.newInstance(String.class,5)&apos;" description="Extract local variable &apos;strArray&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="strArray" replace="false" selection="234 0" stamp="1477414427994" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;int1&apos; from expression &apos;Array.getInt(intArray,0)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;int1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.getInt(intArray,0)&apos;" description="Extract local variable &apos;int1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="int1" replace="false" selection="405 0" stamp="1477414715004" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;length&apos; from expression &apos;Array.getLength(intArray)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;length&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.getLength(intArray)&apos;" description="Extract local variable &apos;length&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="length" replace="false" selection="462 0" stamp="1477414882676" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;object&apos; from expression &apos;Array.get(array,0)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;object&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.get(array,0)&apos;" description="Extract local variable &apos;object&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="object" replace="false" selection="957 0" stamp="1477447421190" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;int1&apos; from expression &apos;Array.getInt(array,0)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;int1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.getInt(array,0)&apos;" description="Extract local variable &apos;int1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="int1" replace="false" selection="1000 0" stamp="1477447477581" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;object&apos; from expression &apos;Array.get(array,1)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;object&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.autoBox()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.get(array,1)&apos;" description="Extract local variable &apos;object&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="object" replace="false" selection="1219 0" stamp="1477448142682" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;Array.newInstance(int.class,3)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ArrayTest.autoBox()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.newInstance(int.class,3)&apos;" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ArrayTest.java" name="newInstance" replace="false" selection="1088 0" stamp="1477448207703" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;classLoader&apos; from expression &apos;ProxyTest.class.getClassLoader()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;classLoader&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;ProxyTest.class.getClassLoader()&apos;" description="Extract local variable &apos;classLoader&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="classLoader" replace="false" selection="271 0" stamp="1477451837413" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;proxyClass&apos; from expression &apos;Proxy.getProxyClass(classLoader,ProxyTest.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;proxyClass&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Proxy.getProxyClass(classLoader,ProxyTest.class)&apos;" description="Extract local variable &apos;proxyClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="proxyClass" replace="false" selection="351 0" stamp="1477451848027" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructor&apos; from expression &apos;proxyClass.getConstructor(InvocationHandler.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;constructor&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;proxyClass.getConstructor(InvocationHandler.class)&apos;" description="Extract local variable &apos;constructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="constructor" replace="false" selection="473 0" stamp="1477451872220" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructors&apos; from expression &apos;proxyClass.getConstructors()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;constructors&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;proxyClass.getConstructors()&apos;" description="Extract local variable &apos;constructors&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="constructors" replace="false" selection="689 0" stamp="1477452017026" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;constructor.newInstance(invocationHandler)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;constructor.newInstance(invocationHandler)&apos;" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="newInstance" replace="false" selection="1061 0" stamp="1477452087863" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;realSubject&apos; from expression &apos;new RealSubject()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;realSubject&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new RealSubject()&apos;" description="Extract local variable &apos;realSubject&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="realSubject" replace="false" selection="530 0" stamp="1477460379324" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;proxyInvocationHandler&apos; from expression &apos;new ProxyInvocationHandler(realSubject)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;proxyInvocationHandler&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ProxyInvocationHandler(realSubject)&apos;" description="Extract local variable &apos;proxyInvocationHandler&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="proxyInvocationHandler" replace="false" selection="1393 0" stamp="1477460800066" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;generateProxyObj&apos; from expression &apos;generateProxyObj(Subject.class,realSubject)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;generateProxyObj&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;generateProxyObj(Subject.class,realSubject)&apos;" description="Extract local variable &apos;generateProxyObj&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="generateProxyObj" replace="false" selection="2132 0" stamp="1477461013317" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;interfaces&apos; from expression &apos;realSubject.getClass().getInterfaces()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;interfaces&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;realSubject.getClass().getInterfaces()&apos;" description="Extract local variable &apos;interfaces&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="interfaces" replace="false" selection="1754 0" stamp="1477461163443" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newProxyInstance&apos; from expression &apos;Proxy.newProxyInstance(classLoader,interfaces,new ProxyInvocationHandler(realSubject))&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;newProxyInstance&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Proxy.newProxyInstance(classLoader,interfaces,new ProxyInvocationHandler(realSubject))&apos;" description="Extract local variable &apos;newProxyInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="newProxyInstance" replace="false" selection="2277 0" stamp="1477461195954" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;declaredMethods&apos; from expression &apos;realSubject.getClass().getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;declaredMethods&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.ProxyInvocationHandler.ProxyInvocationHandler()&apos;&#x0D;&#x0A;- Variable expression: &apos;realSubject.getClass().getDeclaredMethods()&apos;" description="Extract local variable &apos;declaredMethods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="declaredMethods" replace="false" selection="1376 0" stamp="1477463834866" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;class1&apos; from expression &apos;realSubject.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;class1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.getProxySubject()&apos;&#x0D;&#x0A;- Variable expression: &apos;realSubject.getClass()&apos;" description="Extract local variable &apos;class1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="class1" replace="false" selection="3432 0" stamp="1477464294433" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;class1&apos; from expression &apos;realObject.getClass()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;class1&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.ProxyTest.generateProxyObj()&apos;&#x0D;&#x0A;- Variable expression: &apos;realObject.getClass()&apos;" description="Extract local variable &apos;class1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{ProxyTest.java" name="class1" replace="false" selection="2564 0" stamp="1477464525808" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;TypeTest.class.getMethod(&quot;fun&quot;,List.class,String[].class,String.class,String.class)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;TypeTest.class.getMethod(&quot;fun&quot;,List.class,String[].class,String.class,String.class)&apos;" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="method" replace="false" selection="369 0" stamp="1477465409008" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;typeParameters&apos; from expression &apos;method.getTypeParameters()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;typeParameters&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getTypeParameters()&apos;" description="Extract local variable &apos;typeParameters&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="typeParameters" replace="false" selection="466 0" stamp="1477465444130" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterTypes&apos; from expression &apos;method.getParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;parameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getParameterTypes()&apos;" description="Extract local variable &apos;parameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="parameterTypes" replace="false" selection="614 0" stamp="1477465541526" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericParameterTypes&apos; from expression &apos;method.getGenericParameterTypes()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericParameterTypes&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getGenericParameterTypes()&apos;" description="Extract local variable &apos;genericParameterTypes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="genericParameterTypes" replace="false" selection="621 0" stamp="1477465551967" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;actualTypeArguments&apos; from expression &apos;parameterizedType.getActualTypeArguments()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;actualTypeArguments&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getActualTypeArguments()&apos;" description="Extract local variable &apos;actualTypeArguments&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="actualTypeArguments" replace="false" selection="929 0" stamp="1477465600434" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;upperBounds&apos; from expression &apos;wildcardType.getUpperBounds()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;upperBounds&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;wildcardType.getUpperBounds()&apos;" description="Extract local variable &apos;upperBounds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="upperBounds" replace="false" selection="1189 0" stamp="1477465811948" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;lowerBounds&apos; from expression &apos;wildcardType.getLowerBounds()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;lowerBounds&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;wildcardType.getLowerBounds()&apos;" description="Extract local variable &apos;lowerBounds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="lowerBounds" replace="false" selection="1248 0" stamp="1477465818539" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;componentType&apos; from expression &apos;genericArrayType.getGenericComponentType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;componentType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;genericArrayType.getGenericComponentType()&apos;" description="Extract local variable &apos;componentType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="componentType" replace="false" selection="1979 0" stamp="1477466938047" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;bounds&apos; from expression &apos;typeVariable.getBounds()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;bounds&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;typeVariable.getBounds()&apos;" description="Extract local variable &apos;bounds&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="bounds" replace="false" selection="1837 0" stamp="1477466999688" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name&apos; from expression &apos;typeVariable.getName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;name&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;typeVariable.getName()&apos;" description="Extract local variable &apos;name&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="name" replace="false" selection="2004 0" stamp="1477467077179" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genericDeclaration&apos; from expression &apos;typeVariable.getGenericDeclaration()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;genericDeclaration&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;typeVariable.getGenericDeclaration()&apos;" description="Extract local variable &apos;genericDeclaration&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="genericDeclaration" replace="false" selection="2061 0" stamp="1477467084055" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rawType&apos; from expression &apos;parameterizedType.getRawType()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;rawType&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.TypeTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterizedType.getRawType()&apos;" description="Extract local variable &apos;rawType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect{TypeTest.java" name="rawType" replace="false" selection="1038 0" stamp="1477467278587" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObserver&apos; from expression &apos;new MyObserver()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObserver&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObserver()&apos;" description="Extract local variable &apos;myObserver&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{Test.java" name="myObserver" replace="false" selection="866 0" stamp="1477470747561" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myObserverable&apos; from expression &apos;new MyObserverable()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myObserverable&apos;&#x0D;&#x0A;- Destination method: &apos;eventbus.observer.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyObserverable()&apos;" description="Extract local variable &apos;myObserverable&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;eventbus.observer{Test.java" name="myObserverable" replace="false" selection="915 0" stamp="1477470754970" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;eventbus.observer.Test.java&apos;" description="Delete element" element1="/src&lt;eventbus.observer{Test.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477473102076" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;JavaSe_API/classLib&apos;" description="Delete element" element1="/classLib" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477475757058" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;ProxyTest.java&apos; to &apos;JavaSe_API/src/reflect.proxy&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/reflect.proxy&apos;&#x0D;&#x0A;- Original element: &apos;reflect.ProxyTest.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;reflect.proxy" element1="/src&lt;reflect{ProxyTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1477548765199" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;byName&apos; from expression &apos;Inet4Address.getByName(&quot;www.baidu.com&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;byName&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Inet4Address.getByName(&quot;www.baidu.com&quot;)&apos;" description="Extract local variable &apos;byName&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="byName" replace="false" selection="266 0" stamp="1477554126410" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;url&apos; from expression &apos;new URL(path)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;url&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestByUrlConnection()&apos;&#x0D;&#x0A;- Variable expression: &apos;new URL(path)&apos;" description="Extract local variable &apos;url&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="url" replace="false" selection="604 0" stamp="1477554219909" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;connection&apos; from expression &apos;url.openConnection()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;connection&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestByUrlConnection()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.openConnection()&apos;" description="Extract local variable &apos;connection&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="connection" replace="false" selection="639 0" stamp="1477554247962" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;inputStream&apos; from expression &apos;connection.getInputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;inputStream&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestByUrlConnection()&apos;&#x0D;&#x0A;- Variable expression: &apos;connection.getInputStream()&apos;" description="Extract local variable &apos;inputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="inputStream" replace="false" selection="790 0" stamp="1477554266717" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;bufferedReader&apos; from expression &apos;new BufferedReader(new InputStreamReader(inputStream,&quot;UTF-8&quot;))&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;bufferedReader&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestByUrlConnection()&apos;&#x0D;&#x0A;- Variable expression: &apos;new BufferedReader(new InputStreamReader(inputStream,&quot;UTF-8&quot;))&apos;" description="Extract local variable &apos;bufferedReader&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="bufferedReader" replace="false" selection="980 0" stamp="1477554288650" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;socket&apos; from expression &apos;new Socket()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;socket&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestBySocket()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Socket()&apos;" description="Extract local variable &apos;socket&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="socket" replace="false" selection="1244 0" stamp="1477554463117" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;inputStream&apos; from expression &apos;socket.getInputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;inputStream&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestBySocket()&apos;&#x0D;&#x0A;- Variable expression: &apos;socket.getInputStream()&apos;" description="Extract local variable &apos;inputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="inputStream" replace="false" selection="1306 0" stamp="1477554549054" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;outputStream&apos; from expression &apos;socket.getOutputStream()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;outputStream&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestBySocket()&apos;&#x0D;&#x0A;- Variable expression: &apos;socket.getOutputStream()&apos;" description="Extract local variable &apos;outputStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="outputStream" replace="false" selection="1302 0" stamp="1477554649802" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;http&apos; from expression &apos;new StringBuffer()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;http&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.requestBySocket()&apos;&#x0D;&#x0A;- Variable expression: &apos;new StringBuffer()&apos;" description="Extract local variable &apos;http&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="http" replace="false" selection="1383 0" stamp="1477554663721" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;url2&apos; from expression &apos;new URL(url)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;url2&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.doGet()&apos;&#x0D;&#x0A;- Variable expression: &apos;new URL(url)&apos;" description="Extract local variable &apos;url2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="url2" replace="false" selection="2096 0" stamp="1477556011264" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;host&apos; from expression &apos;url.getHost()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;host&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.doGet()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.getHost()&apos;" description="Extract local variable &apos;host&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="host" replace="false" selection="2126 0" stamp="1477556025881" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;response&apos; from expression &apos;new StringBuffer()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;response&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.readHttpResponse()&apos;&#x0D;&#x0A;- Variable expression: &apos;new StringBuffer()&apos;" description="Extract local variable &apos;response&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="response" replace="false" selection="2849 0" stamp="1477556152404" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;response&apos; from expression &apos;readHttpResponse(socket)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;response&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.doGet()&apos;&#x0D;&#x0A;- Variable expression: &apos;readHttpResponse(socket)&apos;" description="Extract local variable &apos;response&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="response" replace="false" selection="2633 0" stamp="1477556255987" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;httpClient&apos; from expression &apos;new HttpClient()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;httpClient&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new HttpClient()&apos;" description="Extract local variable &apos;httpClient&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="httpClient" replace="false" selection="538 0" stamp="1477556337768" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;doGet&apos; from expression &apos;httpClient.doGet(&quot;https://www.baidu.com&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;doGet&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;httpClient.doGet(&quot;https://www.baidu.com&quot;)&apos;" description="Extract local variable &apos;doGet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="doGet" replace="false" selection="608 0" stamp="1477556349196" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;port&apos; from expression &apos;url.getPort()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;port&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.doGet()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.getPort()&apos;" description="Extract local variable &apos;port&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="port" replace="false" selection="592 0" stamp="1477556404487" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;response&apos; from expression &apos;new StringBuffer()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;response&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.doGet()&apos;&#x0D;&#x0A;- Variable expression: &apos;new StringBuffer()&apos;" description="Extract local variable &apos;response&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="response" replace="false" selection="1344 0" stamp="1477557091873" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;headers&apos; from expression &apos;request.getHeaders()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;headers&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.execute()&apos;&#x0D;&#x0A;- Variable expression: &apos;request.getHeaders()&apos;" description="Extract local variable &apos;headers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="headers" replace="false" selection="726 0" stamp="1477558003814" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;request&apos; from expression &apos;new Request().setUrl(url).addHeader(&quot;Connection&quot;,&quot;: keep-alive&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;request&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Request().setUrl(url).addHeader(&quot;Connection&quot;,&quot;: keep-alive&quot;)&apos;" description="Extract local variable &apos;request&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="request" replace="false" selection="668 0" stamp="1477558028344" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;request&apos; from expression &apos;new Request(this)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;request&apos;&#x0D;&#x0A;- Destination method: &apos;http.Request.Builder.build()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Request(this)&apos;" description="Extract local variable &apos;request&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{Request.java" name="request" replace="false" selection="838 0" stamp="1477558136989" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;HttpMethod.GET.toString()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;string&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;HttpMethod.GET.toString()&apos;" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="string" replace="false" selection="903 0" stamp="1477558449997" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;request.getMethod()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpClient.execute()&apos;&#x0D;&#x0A;- Variable expression: &apos;request.getMethod()&apos;" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpClient.java" name="method" replace="false" selection="779 0" stamp="1477558552869" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;url2&apos; from expression &apos;new URL(url)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;url2&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new URL(url)&apos;" description="Extract local variable &apos;url2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="url2" replace="false" selection="616 0" stamp="1477558961618" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;url.getClass().getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;methods&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;url.getClass().getDeclaredMethods()&apos;" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="methods" replace="false" selection="645 0" stamp="1477559037024" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name&apos; from expression &apos;method.getName()&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;name&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.getName()&apos;" description="Extract local variable &apos;name&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="name" replace="false" selection="783 0" stamp="1477559060202" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;value&apos; from expression &apos;method.invoke(url)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;value&apos;&#x0D;&#x0A;- Destination method: &apos;http.HttpTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;method.invoke(url)&apos;" description="Extract local variable &apos;value&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;http{HttpTest.java" name="value" replace="false" selection="854 0" stamp="1477559099696" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;MyClassLoader.java&apos; to &apos;JavaSe_API/src/reflect.proxy&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/reflect.proxy&apos;&#x0D;&#x0A;- Original element: &apos;classloader.MyClassLoader.java&apos;" description="Copy compilation unit" destination="/src&lt;reflect.proxy" element1="/src&lt;classloader{MyClassLoader.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1477623722380" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;myClassLoader&apos; from expression &apos;new MyClassLoader(classFile)&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Variable name: &apos;myClassLoader&apos;&#x0D;&#x0A;- Destination method: &apos;reflect.proxy.ProxyTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new MyClassLoader(classFile)&apos;" description="Extract local variable &apos;myClassLoader&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;reflect.proxy{ProxyTest.java" name="myClassLoader" replace="false" selection="3343 0" stamp="1477624010587" version="1.0"/>&#x0A;&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original project: &apos;JavaSe_API&apos;&#x0D;&#x0A;- Original element: &apos;reflect.proxy.MyClassLoader.java&apos;" description="Delete element" element1="/src&lt;reflect.proxy{MyClassLoader.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1477626102313" subPackages="false" version="1.0"/>
</session>