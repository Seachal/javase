<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;listIterator&apos; from expression &apos;list.listIterator()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;listIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.print()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.listIterator()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="listIterator" replace="true" selection="3427 0" stamp="1398140137190" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;element&apos; from expression &apos;listIterator.next()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;element&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.print()&apos;&#x0D;&#x0A;- Variable expression: &apos;listIterator.next()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;element&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="element" replace="true" selection="3554 0" stamp="1398140159545" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingIterator&apos; from expression &apos;list.descendingIterator()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;descendingIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.print()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.descendingIterator()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;descendingIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="descendingIterator" replace="true" selection="3699 0" stamp="1398140284657" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;listIterator&apos; from expression &apos;list.listIterator(index)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;listIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.printIndex()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.listIterator(index)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="listIterator" replace="true" selection="4086 0" stamp="1398141277305" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;next&apos; from expression &apos;listIterator.next()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;next&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.printIndex()&apos;&#x0D;&#x0A;- Variable expression: &apos;listIterator.next()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;next&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="next" replace="true" selection="4213 0" stamp="1398141294450" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingIterator&apos; from expression &apos;list.descendingIterator()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;descendingIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.printIndex()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.descendingIterator()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;descendingIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="descendingIterator" replace="true" selection="4545 0" stamp="1398141575594" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="arrayList" replace="true" selection="2353 0" stamp="1398141867673" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;containsAll&apos; from expression &apos;linkedList.containsAll(arrayList)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;containsAll&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;linkedList.containsAll(arrayList)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;containsAll&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="containsAll" replace="true" selection="2467 0" stamp="1398141892290" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;retainAll&apos; from expression &apos;linkedList.retainAll(arrayList)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;retainAll&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;linkedList.retainAll(arrayList)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;retainAll&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="retainAll" replace="true" selection="2594 0" stamp="1398141976187" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;listIterator&apos; from expression &apos;list.listIterator()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;listIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedListTest.iteratorModified()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.listIterator()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedListTest.java" name="listIterator" replace="true" selection="5215 0" stamp="1398142233197" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;linkedHashMap&apos; from expression &apos;new LinkedHashMap&lt;K,V&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;linkedHashMap&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedHashMapTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new LinkedHashMap&lt;K,V&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;linkedHashMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedHashMapTest.java" name="linkedHashMap" replace="true" selection="289 0" stamp="1398142768648" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;next&apos; from expression &apos;iterator.next()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;next&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.IteratorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;iterator.next()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;next&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{IteratorTest.java" name="next" replace="true" selection="757 15" stamp="1398145167553" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;listIterator&apos; from expression &apos;list.listIterator(1)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;listIterator&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.IteratorTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.listIterator(1)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listIterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{IteratorTest.java" name="listIterator" replace="true" selection="1268 0" stamp="1398145559005" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;hashMap&apos; from expression &apos;new HashMap&lt;String,String&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;hashMap&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedHashMapTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new HashMap&lt;String,String&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;hashMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedHashMapTest.java" name="hashMap" replace="true" selection="556 0" stamp="1398146741615" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;key&apos; from expression &apos;entry.getKey()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;key&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedHashMapTest.print()&apos;&#x0D;&#x0A;- Variable expression: &apos;entry.getKey()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;key&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedHashMapTest.java" name="key" replace="true" selection="817 0" stamp="1398147068439" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;value&apos; from expression &apos;entry.getValue()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;value&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.LinkedHashMapTest.print()&apos;&#x0D;&#x0A;- Variable expression: &apos;entry.getValue()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;value&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{LinkedHashMapTest.java" name="value" replace="true" selection="847 0" stamp="1398147074788" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;util&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.util.LinkedHashMapTest.java&apos;" description="Delete element" element1="/src&lt;com.cn.util{LinkedHashMapTest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1398159462511" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;asList&apos; from expression &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;asList&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;asList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="asList" replace="true" selection="284 0" stamp="1398160492489" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;arrayList&apos; from expression &apos;new ArrayList&lt;E&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;arrayList&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;E&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;arrayList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="arrayList" replace="true" selection="289 0" stamp="1398160653390" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;arrayList.toArray()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;array&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;arrayList.toArray()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="array" replace="true" selection="352 0" stamp="1398160760869" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;asList&apos; from expression &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;asList&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;asList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="asList" replace="true" selection="346 0" stamp="1398161031181" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;asList&apos; from expression &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;asList&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.asList(arr)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;asList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="asList" replace="true" selection="407 0" stamp="1398161145281" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;list.toArray(new String[list2.size()])&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;array&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.toArray(new String[list2.size()])&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="array" replace="true" selection="527 0" stamp="1398161256209" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;size&apos; from expression &apos;list2.size()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;size&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;list2.size()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;size&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="size" replace="true" selection="529 12" stamp="1398161965273" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array2&apos; from expression &apos;list2.toArray()&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;array2&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;list2.toArray()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="array2" replace="true" selection="543 0" stamp="1398162182851" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;binarySearch&apos; from expression &apos;Arrays.binarySearch(arr,2)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;binarySearch&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.binarySearch(arr,2)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;binarySearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="binarySearch" replace="true" selection="633 0" stamp="1398162635500" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SimpleDateFormatTest.java&apos; to &apos;util/src/com.cn.util.date&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Destination element: &apos;util/src/com.cn.util.date&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.util.SimpleDateFormatTest.java&apos;" description="Copy compilation unit" destination="/src&lt;com.cn.util.date" element1="/src&lt;com.cn.util{SimpleDateFormatTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1398162821812" units="1" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;util&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.util.date.xx.java&apos;" description="Delete element" element1="/src&lt;com.cn.util.date{xx.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1398162827289" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;util&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.util.SimpleDateFormatTest.java&apos;" description="Delete element" element1="/src&lt;com.cn.util{SimpleDateFormatTest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1398162833440" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;Array.newInstance(String.class.getComponentType(),5)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;newInstance&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Array.newInstance(String.class.getComponentType(),5)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="newInstance" replace="true" selection="970 0" stamp="1398163418209" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;Arrays.toString(arr)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;string&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.toString(arr)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="string" replace="true" selection="1112 0" stamp="1398174941965" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;equals&apos; from expression &apos;Arrays.equals(iArray1,iArray2)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;equals&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.equals(iArray1,iArray2)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;equals&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="equals" replace="true" selection="1143 0" stamp="1398175319377" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;copyOfRange&apos; from expression &apos;Arrays.copyOfRange(fArr,1,fArr.length)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;copyOfRange&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.copyOfRange(fArr,1,fArr.length)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;copyOfRange&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="copyOfRange" replace="true" selection="1232 0" stamp="1398175663092" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;copyOf&apos; from expression &apos;Arrays.copyOf(fArr,fArr.length + 2)&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Variable name: &apos;copyOf&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.util.ArraysTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.copyOf(fArr,fArr.length + 2)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;copyOf&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.util{ArraysTest.java" name="copyOf" replace="true" selection="1309 0" stamp="1398175896094" version="1.0"/>&#x0A;<refactoring comment="Copy 8 elements to &apos;JavaSe_API/src/java.util&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/java.util&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.cn.util.ArraysTest.java&#x0D;&#x0A;     com.cn.util.ColleationsTest.java&#x0D;&#x0A;     com.cn.util.PropertiesTest.java&#x0D;&#x0A;     com.cn.util.SetTest.java&#x0D;&#x0A;     com.cn.util.StackTest.java&#x0D;&#x0A;     com.cn.util.IteratorTest.java&#x0D;&#x0A;     com.cn.util.LinkedListTest.java&#x0D;&#x0A;     com.cn.util.MapTest.java" description="Copy compilation units" destination="=JavaSe_API/src&lt;java.util" element1="/src&lt;com.cn.util{ArraysTest.java" element2="/src&lt;com.cn.util{ColleationsTest.java" element3="/src&lt;com.cn.util{PropertiesTest.java" element4="/src&lt;com.cn.util{SetTest.java" element5="/src&lt;com.cn.util{StackTest.java" element6="/src&lt;com.cn.util{IteratorTest.java" element7="/src&lt;com.cn.util{LinkedListTest.java" element8="/src&lt;com.cn.util{MapTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1398176455106" units="8" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SimpleDateFormatTest.java&apos; to &apos;JavaSe_API/src/java.util&apos;&#x0D;&#x0A;- Original project: &apos;util&apos;&#x0D;&#x0A;- Destination element: &apos;JavaSe_API/src/java.util&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.util.date.SimpleDateFormatTest.java&apos;" description="Copy compilation unit" destination="=JavaSe_API/src&lt;java.util" element1="/src&lt;com.cn.util.date{SimpleDateFormatTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1398176523527" units="1" version="1.0"/>
</session>