<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;thread_new&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Original element: &apos;com.thread.test.FileTest.java&apos;" description="Delete element" element1="/src&lt;com.thread.test{FileTest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1487570852968" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;take&apos; from expression &apos;synchronousQueue.take()&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Variable name: &apos;take&apos;&#x0D;&#x0A;- Destination method: &apos;com.thread.test.SynchronousQueueTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;synchronousQueue.take()&apos;" description="Extract local variable &apos;take&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.thread.test{SynchronousQueueTest.java" name="take" replace="false" selection="1282 0" stamp="1487571258475" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;reentrantLock&apos; from expression &apos;new ReentrantLock()&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Variable name: &apos;reentrantLock&apos;&#x0D;&#x0A;- Destination method: &apos;com.thread.java5.LockTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ReentrantLock()&apos;" description="Extract local variable &apos;reentrantLock&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.thread.java5{LockTest.java" name="reentrantLock" replace="false" selection="267 0" stamp="1487577956773" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;heldByCurrentThread&apos; from expression &apos;reentrantLock.isHeldByCurrentThread()&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Variable name: &apos;heldByCurrentThread&apos;&#x0D;&#x0A;- Destination method: &apos;com.thread.java5.LockTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;reentrantLock.isHeldByCurrentThread()&apos;" description="Extract local variable &apos;heldByCurrentThread&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.thread.java5{LockTest.java" name="heldByCurrentThread" replace="false" selection="364 0" stamp="1487577970824" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;holdCount&apos; from expression &apos;reentrantLock.getHoldCount()&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Variable name: &apos;holdCount&apos;&#x0D;&#x0A;- Destination method: &apos;com.thread.java5.LockTest.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;reentrantLock.getHoldCount()&apos;" description="Extract local variable &apos;holdCount&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.thread.java5{LockTest.java" name="holdCount" replace="false" selection="471 0" stamp="1487577988305" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;thread_new&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Original element: &apos;com.thread.test.MyTestt.java&apos;" description="Delete element" element1="/src&lt;com.thread.test{MyTestt.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1487585691983" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;future&apos; from expression &apos;completionService.submit(new Callable&lt;Integer&gt;(){@Override public Integer call() throws Exception {long sleepTime=new Random().nextInt(10);StringBuffer stringBuffer=new StringBuffer();for (int j=0; j &lt; sleepTime * 3000000; j++) {stringBuffer.append(&quot;j+&quot; + j);}System.out.println(&quot;task-&gt;&quot; + task + &quot;执行完了&quot;);return task;}})&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Variable name: &apos;future&apos;&#x0D;&#x0A;- Destination method: &apos;com.thread.java5.CallableAndFuture.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;completionService.submit(new Callable&lt;Integer&gt;(){@Override public Integer call() throws Exception {long sleepTime=new Random().nextInt(10);StringBuffer stringBuffer=new StringBuffer();for (int j=0; j &lt; sleepTime * 3000000; j++) {stringBuffer.append(&quot;j+&quot; + j);}System.out.println(&quot;task-&gt;&quot; + task + &quot;执行完了&quot;);return task;}})&apos;" description="Extract local variable &apos;future&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.thread.java5{CallableAndFuture.java" name="future" replace="false" selection="1394 0" stamp="1487585894565" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;thread_new&apos;&#x0D;&#x0A;- Original project: &apos;thread_new&apos;&#x0D;&#x0A;- Original element: &apos;com.thread.test.TestTT.java&apos;" description="Delete element" element1="/src&lt;com.thread.test{TestTT.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1487681325896" subPackages="false" version="1.0"/>
</session>