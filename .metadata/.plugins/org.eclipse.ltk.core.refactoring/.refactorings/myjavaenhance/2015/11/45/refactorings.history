<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;cls.getDeclaredMethods()&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;methods&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getDeclaredMethods()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="methods" replace="true" selection="262 0" stamp="1446536783949" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;method&apos; from expression &apos;cls.getDeclaredMethod(&quot;setArgs&quot;,int[].class)&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;method&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getDeclaredMethod(&quot;setArgs&quot;,int[].class)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;method&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="method" replace="true" selection="499 0" stamp="1446536877509" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;test&apos; from expression &apos;new Test()&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;test&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Test()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;test&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="test" replace="true" selection="470 0" stamp="1446536953686" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;getMethod&apos; from expression &apos;cls.getDeclaredMethod(&quot;getArgs&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;getMethod&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;cls.getDeclaredMethod(&quot;getArgs&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;getMethod&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="getMethod" replace="true" selection="712 0" stamp="1446537035186" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;values&apos; from expression &apos;getMethod.invoke(test)&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;values&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;getMethod.invoke(test)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;values&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="values" replace="true" selection="758 0" stamp="1446537049245" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;myjavaenhance&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Original element: &apos;com.cn.reflect.Test.java&apos;" description="Delete element" element1="/src&lt;com.cn.reflect{Test.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1446537185034" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;length&apos; from expression &apos;args.length&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;length&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;args.length&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;length&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="length" replace="true" selection="182 0" stamp="1446541357597" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;j&apos; from expression &apos;args[i]&apos;&#x0D;&#x0A;- Original project: &apos;myjavaenhance&apos;&#x0D;&#x0A;- Variable name: &apos;j&apos;&#x0D;&#x0A;- Destination method: &apos;com.cn.reflect.Test.test()&apos;&#x0D;&#x0A;- Variable expression: &apos;args[i]&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;j&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.cn.reflect{Test.java" name="j" replace="true" selection="277 0" stamp="1446541398399" version="1.0"/>
</session>